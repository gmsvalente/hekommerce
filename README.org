* A heroku ecommerce demo
  This is a ecommerce demo using heroku!

  It's a *WIP*.

  So errors and incomplete usability is expected!

** Stack
*** Clojure
    - spec
    - XTDB with postgresql
    - hiccup
    - ring
    - reitit
*** Clojurescript
    - shadow-cljs
    - reagent
    - re-frame
** USAGE

   You need clojure, clojurescript and shadow-cljs installed.
   - https://clojure.org
   - https://clojurescript.org
   - https://github.com/thheller/shadow-cljs
     

   To run in your localhost, you must have a postgresql installed.
   Or you can use a docker image.
   #+begin_src shell :eval never
   docker pull postgres
   docker run --name container-name -e POSTGRES_USER=user -e POSTGRES_PASSWORD=password -e POSTGRES_DB=userdb -p 5432:5432 -d postgres
   #+end_src

   If you use other configuration for host, port, username, password and db you must set an JDBC_DATABASE_URL env variable.
   #+begin_src shell :eval never
   export POSTGRES_USER=<psql user name>
   export POSTGRES_HOST=<psql host address>
   export POSTGRES_PASSWORD=<psql password>
   export POSTGRES_DB=<psql db name>

   export JDBC_DATABASE_URL="jdbc:postgresql://$POSTGRES_HOST:5432/$POSTGRES_DB?password=$POSTGRES_PASSWORD&user=$POSTGRES_USER"
   #+end_src
   
   Set web port:
   #+begin_src shell :eval never
   export PORT=<port number>
   #+end_src

   Clone the repo and run:
   #+begin_src shell :eval never
   git clone https://github.com/gmsvalente/hekommerce.git
   cd hekommerce
   npm install
   shadow-cljs release :hekommerce 
   clojure -M:run-server $PORT
   #+end_src
* TODOS
  - [ ] TESTS
  - [ ] Improve specs validations and parsing
  - [ ] Add products api
  - [ ] Add js/webStorage
  - [ ] Add integrant


